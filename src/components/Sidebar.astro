<div
  id="sidebar"
  class="bg-blue fixed top-0 left-0 z-50 h-full w-full -translate-x-full transform shadow-lg transition-transform duration-300 ease-in-out"
>
  <div class="absolute top-6 right-6 cursor-pointer">
    <button
      id="close-sidebar"
      class="text-white transition-colors hover:text-gray-200"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        class="h-8 w-8"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
  </div>

  <div class="flex h-full items-center justify-center">
    <nav class="space-y-8">
      <div
        class="block cursor-pointer py-4 text-center text-4xl font-bold text-gray-800 transition-colors duration-200 hover:text-purple-600"
      >
        <a href="/teams" class="block">Equipos</a>
      </div>

      <div
        class="block cursor-pointer py-4 text-center text-4xl font-bold text-gray-800 transition-colors duration-200 hover:text-purple-600"
        data-target="#sponsors"
      >
        <a href="#sponsors" class="block">Patrocinadores</a>
      </div>

      <!-- Placeholder para futuras opciones -->
      <!-- <a href="#about" class="block text-center text-4xl font-bold text-gray-800 hover:text-purple-600 transition-colors duration-200 py-4">
        Acerca de
      </a> -->
    </nav>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const sidebar = document.getElementById("sidebar");
    const burger = document.getElementById("burger");
    const closeSidebar = document.getElementById("close-sidebar");

    function toggleSidebar() {
      if (sidebar && burger) {
        const isOpen = sidebar.classList.contains("translate-x-0");

        if (isOpen) {
          sidebar.classList.remove("translate-x-0");
          sidebar.classList.add("-translate-x-full");
          (burger as HTMLInputElement).checked = false;
        } else {
          sidebar.classList.remove("-translate-x-full");
          sidebar.classList.add("translate-x-0");
          (burger as HTMLInputElement).checked = true;
        }
      }
    }

    function closeSidebarNow() {
      if (sidebar && burger) {
        sidebar.style.transition = "none";
        sidebar.classList.remove("translate-x-0");
        sidebar.classList.add("-translate-x-full");
        (burger as HTMLInputElement).checked = false;

        setTimeout(() => {
          sidebar.style.transition = "";
        }, 50);
      }
    }

    function handleNavigation(target: string) {
      closeSidebarNow();

      setTimeout(() => {
        const element = document.querySelector(target);
        if (element) {
          element.scrollIntoView({
            behavior: "smooth",
            block: "start",
          });
        }
      }, 100);
    }

    if (burger) {
      burger.addEventListener("change", toggleSidebar);
    }

    if (closeSidebar) {
      closeSidebar.addEventListener("click", toggleSidebar);
    }

    const navItems = document.querySelectorAll("[data-target]");
    navItems.forEach((item) => {
      item.addEventListener("click", (e) => {
        e.preventDefault();
        const target = (item as HTMLElement).getAttribute("data-target");
        if (target) {
          handleNavigation(target);
        }
      });
    });
  });
</script>
